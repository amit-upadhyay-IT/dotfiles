#!/bin/sh

# Run 'ln -s -f ../../hooks/pre-push .git/hooks/pre-push' from the base
# directory to symlink this into your git hooks

# Called by "git push" after it has checked the remote status, but before
# anything has been pushed.  If this script exits with a non-zero status
# nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local sha1> <remote ref> <remote sha1>

remote="$1"
url="$2"

z40=0000000000000000000000000000000000000000

while read local_ref local_sha remote_ref remote_sha
do
  if [ "$local_sha" = $z40 ]
  then
    # Handle delete
    :
  else
    if [ "$remote_sha" = $z40 ]
    then
      # New branch, examine all commits
      range="$local_sha"
    else
      # Update to existing branch, examine new commits
      range="$remote_sha..$local_sha"
    fi

    # Check for Reviewed By text in commit
    for Rev in $(git rev-list "$range")
    do
      echo "$Rev"
    done
    exit 1

    commit=`git rev-list -n 1 --grep '^Reviewed By: ' "$range"`
    if [ "" == "$commit" ]
    then
      echo >&2 "[POLICY] Found un-reviewed commit in $local_ref, not pushing.  Please make sure a differential has been created for this commit.  To push anyways, use the --no-verify flag."
      exit 1
    fi
  fi
done

echo >&2 "[SUCCESS] Push successful."
exit 0

